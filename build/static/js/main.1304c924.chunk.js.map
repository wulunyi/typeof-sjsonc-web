{"version":3,"sources":["utils/monitor.ts","components/Editor.tsx","components/GithubLinkIcon.tsx","components/StyledTextField.tsx","components/StyleCheckbox.tsx","components/TypeofSettings.tsx","components/TableEditor/helper.ts","components/TableEditor/index.tsx","utils/storage.ts","constants.ts","App.tsx","mock.ts","reportWebVitals.ts","index.tsx"],"names":["aegis","Aegis","id","reportApiSpeed","reportAssetSpeed","spa","FullSizeDiv","styled","div","AbsoluteDiv","Editor","props","containerRef","useRef","useImmer","value","editor","undefined","showMsg","data","updateData","useLayoutEffect","current","instance","CodeMirror","mode","theme","readOnly","disabled","lineNumbers","lineWrapping","draft","on","e","newValue","getValue","onChange","useEffect","setValue","CopyAbility","useMemo","copyable","Tooltip","title","placement","text","onCopy","report","IconButton","style","color","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","ref","LinkBox","a","GithubLinkIcon","href","height","viewBox","version","width","aria-hidden","fill","fillRule","d","useStyles","makeStyles","root","marginLeft","marginTop","fontSize","transform","fontWeight","lineHeight","backgroundColor","paddingLeft","paddingRight","borderRadius","boxsizing","overflow","StyledTextField","classes","TextField","className","fullWidth","margin","icon","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","display","content","StyledCheckbox","Checkbox","disableRipple","clsx","inputProps","TitlePanel","alignItems","body","DEFAULT_SETTINGS","name","useTableInput","options","disallowComments","separate","prefix","TypeofSettings","settings","updateSettings","dragft","hotkeys","FormControl","component","FormLabel","focused","FormGroup","label","placeholder","event","target","FormControlLabel","control","checked","_","Switch","src","alt","getInnerText","el","innerText","parseTableToResult","table","thead","querySelector","trs","querySelectorAll","map","tr","filter","strArr","length","getTableTdInnerText","head","getTableThInnerText","shift","Box","Head","Body","Paste","minWidth","select","maxWidth","border","buttonPanel","padding","TableEditor","type","comments","toSJsonc","useCallback","result","forEach","row","typeValue","Number","isNaN","typeNameArr","split","firstName","restName","typeName","item","slice","toLocaleUpperCase","tableToSJsonc","Grid","container","xs","key","size","InputLabel","Select","ev","index","MenuItem","justifyContent","cursor","onClick","onPaste","findInderTable","innerHtml","document","createElement","innerHTML","renderToDiv","clipboardData","getData","getClipboardData","isTable","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","sIndex","storage","localStorage","setItem","JSON","stringify","v","getItem","parse","error","RENDER_SETTINGS_STORAGE_KEY","FlexDiv","Side","Hover","DEFAULT_DATA","sjsonc","typeofResult","App","transformFn","typeofSjsonc","trim","camelcase","renderEditor","CodeEditor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reportPv","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1304c924.chunk.js","sourcesContent":["import Aegis from 'aegis-web-sdk';\n\nexport const aegis = new Aegis({\n    id: 'kXD2YxMe7J2oAzeWb1', // 上报 id\n    // uin: 'xxx', // 用户唯一 ID（可选）\n    reportApiSpeed: true, // 接口测速\n    reportAssetSpeed: true, // 静态资源测速\n    spa: true // spa 应用页面跳转的时候开启 pv 计算\n});","import CodeMirror from 'codemirror';\nimport { useEffect, useLayoutEffect, useRef, useMemo } from 'react';\nimport { useImmer } from \"use-immer\";\nimport styled from 'styled-components';\nimport CopyIcon from '@material-ui/icons/FileCopy';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport 'codemirror/theme/darcula.css';\nimport 'codemirror/lib/codemirror.css';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { aegis } from '../utils/monitor';\n\nconst FullSizeDiv = styled.div`\n    position: relative;\n    height: 100%;\n    width: 100%;\n`;\n\nconst AbsoluteDiv = styled.div`\n  right: 10px;\n  top: 10px;\n  position: absolute;\n  z-index: 10;\n  cursor: pointer;\n  user-select: none;\n`;\n\ninterface Props {\n    value?: string;\n    onChange?: (v: string) => void;\n    disabled?: boolean;\n    copyable?: boolean;\n}\n\ninterface Data {\n    value: string;\n    editor: CodeMirror.Editor | undefined;\n    showMsg: boolean;\n}\n\nexport function Editor(props: Props) {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [data, updateData] = useImmer<Data>({\n        value: props.value ?? '',\n        editor: undefined,\n        showMsg: false,\n    });\n    \n    useLayoutEffect(() => {\n        if (containerRef.current) {\n            const instance = CodeMirror(containerRef.current, {\n                value: props.value ?? \"\",\n                mode: 'default',\n                theme: \"darcula\",\n                readOnly: props.disabled ?? false,\n                lineNumbers: true,\n                lineWrapping: true,\n            })\n\n            updateData((draft) => {draft.editor = instance});\n\n            instance.on(\"change\", (e) => {\n                const newValue = e.getValue();\n                updateData((draft) => {draft.value = newValue});\n                props.onChange?.(newValue);\n            })\n        }\n    }, []);\n    useEffect(() => {\n        const {editor, value} = data;\n\n        if (editor && props.value !== value && typeof props.value ==='string') {\n            editor.setValue(props.value)\n        }\n    }, [props.value])\n\n    const CopyAbility = useMemo(() => {\n        if (!props.copyable) return null;\n\n        return (\n            <>\n                <AbsoluteDiv>\n                    <Tooltip title=\"Copy\" placement=\"left\">\n                        <CopyToClipboard\n                            text={data.value}\n                            onCopy={() => { \n                                aegis.report('copy');\n                                updateData((draft) => { draft.showMsg = true });\n                            }}\n                        >\n                                <IconButton>\n                                    <CopyIcon style={{ color: '#fff' }} />\n                                </IconButton>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </AbsoluteDiv>\n\n                <Snackbar\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                    open={data.showMsg}\n                    autoHideDuration={1500}\n                    onClose={() => updateData((draft) => { draft.showMsg = false })}\n                    message=\"复制成功\"\n                />\n            </>\n        )\n    }, [data.showMsg, props.copyable])\n\n    return (\n        <FullSizeDiv>\n            <FullSizeDiv ref={containerRef}></FullSizeDiv>\n\n            {CopyAbility}\n        </FullSizeDiv>\n    ) \n}","import styled from 'styled-components';\n\nconst LinkBox = styled.a`\n    display: inline-block;\n    user-select: none;\n    cursor: pointer;\n`;\n\nexport function GithubLinkIcon() {\n    return (\n        <LinkBox href=\"https://github.com/wulunyi/typeof-sjsonc-web\">\n            <svg \n                height=\"24\" \n                viewBox=\"0 0 16 16\" \n                version=\"1.1\" width=\"24\" \n                aria-hidden=\"true\"\n                fill=\"rgb(102, 178, 255)\"\n            >\n                <path \n                    fillRule=\"evenodd\" \n                    d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n                >\n                </path>\n            </svg>\n        </LinkBox>\n    )\n}","import { makeStyles } from '@material-ui/core/styles';\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles({\n  root: {\n    '&': {\n        marginLeft: '-2px',\n        marginTop: '10px',\n    },\n    '& .MuiFormLabel-root': {\n        color: '#fff',\n        fontSize: '1rem',\n        transform: 'translate(0, -10px) scale(1)',\n        fontWeight: '400',\n        lineHeight: '1.5'\n    },\n    '& .MuiInputBase-root': {\n        backgroundColor: '#fff',\n        paddingLeft: '6px',\n        paddingRight: '6px',\n        borderRadius: '4px',\n        boxsizing: 'border-box',\n        overflow: 'hidden',\n    },\n    '& .MuiInputBase-input': {\n        height: '1.3em'\n    }\n  },\n});\n\nexport function StyledTextField(props: TextFieldProps) {\n  const classes = useStyles();\n\n  return (\n    <TextField\n        className={classes.root}\n        fullWidth\n        margin=\"dense\"\n        {...props}\n    />\n  );\n}\n\n","import clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles({\n  root: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n  icon: {\n    borderRadius: 3,\n    width: 16,\n    height: 16,\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage:\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3',\n    },\n  },\n});\n\n// Inspired by blueprintjs\nexport function StyledCheckbox(props: CheckboxProps) {\n  const classes = useStyles();\n\n  return (\n    <Checkbox\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n      icon={<span className={classes.icon} />}\n      inputProps={{ 'aria-label': 'decorative checkbox' }}\n      {...props}\n    />\n  );\n}\n\n","import FormLabel from '@material-ui/core/FormLabel';\nimport { useEffect } from 'react';\nimport { useImmer } from \"use-immer\";\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { StyledTextField } from './StyledTextField';\nimport { StyledCheckbox } from './StyleCheckbox';\nimport Switch from '@material-ui/core/Switch';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport styled from 'styled-components';\nimport hotkeys from 'hotkeys-js';\nimport { aegis } from '../utils/monitor';\n\nconst TitlePanel = styled.div`\n    display: flex; \n    align-items: center; \n    justify-content: space-between;\n    margin: 10px 0;\n`;\n\nconst useStyles = makeStyles({\n    root: {\n        '& .MuiFormLabel-root': {\n            color: '#fff',\n            display: 'flex',\n            alignItems: 'center',\n        },\n    },\n    body: {\n        paddingLeft: '12px'\n    }\n});\n\nexport const DEFAULT_NAME = 'root';\nexport const DEFAULT_SETTINGS = {\n    name: DEFAULT_NAME,\n    useTableInput: false,\n    options: {\n      disallowComments: false,\n      separate: true,\n      prefix: ''\n    }\n};\n\nexport type SettingsValue = typeof DEFAULT_SETTINGS;\n\nexport interface SettingsProps {\n    value?: SettingsValue;\n    onChange?: (v: SettingsValue) => void;\n}\n\nexport function TypeofSettings(props: SettingsProps) {\n    const classes = useStyles();\n    const [settings, updateSettings] = useImmer<SettingsValue>(props.value ?? DEFAULT_SETTINGS);\n\n    useEffect(() => {\n        if (props.value !== settings) {\n            updateSettings((dragft) => {dragft = props.value ?? DEFAULT_SETTINGS});\n        }\n    }, [props.value]);\n\n    useEffect(() => {\n        props.onChange?.(settings)\n    }, [settings])\n\n    useEffect(() => {\n        hotkeys('ctrl+`', () => {\n            updateSettings(draft => { draft.useTableInput = !draft.useTableInput })\n        })\n    }, [])\n\n    return (\n        <FormControl component=\"fieldset\" fullWidth className={classes.root}>\n            <TitlePanel>\n                <FormLabel focused={false} component=\"legend\">\n                    <SettingsIcon />&nbsp;&nbsp;Render Settings\n                </FormLabel>\n            </TitlePanel>\n            <FormGroup className={classes.body}>\n                <StyledTextField\n                    label=\"Interface Name\"\n                    value={settings.name}\n                    placeholder={'root'}\n                    onChange={(event) => {\n                        aegis.report('settings.name');\n                        updateSettings((dragft) => { dragft.name = event.target.value });\n                    }}\n                />\n\n                <StyledTextField\n                    label=\"Prefix\"\n                    value={settings.options.prefix}\n                    placeholder={'前缀'}\n                    onChange={(event) => {\n                        aegis.report('settings.prefix');\n                        updateSettings((dragft) => { dragft.options.prefix = event.target.value });\n                    }}\n                />\n\n                <FormControlLabel\n                    control={<StyledCheckbox\n                        name=\"disallowComments\"\n                        checked={settings.options.disallowComments}\n                        onChange={(_, checked) => {\n                            aegis.report('settings.disallowComments');\n                            updateSettings((dragft) => {\n                                dragft.options.disallowComments = checked;\n                            })\n                        }}\n                    />}\n                    label=\"Disable Comments\"\n                />\n\n                <FormControlLabel\n                    control={<StyledCheckbox\n                        name=\"separate\"\n                        checked={settings.options.separate}\n                        onChange={(_, checked) => {\n                            aegis.report('settings.separate');\n                            updateSettings((dragft) => {\n                                dragft.options.separate = checked;\n                            })\n                        }}\n                    />}\n                    label=\"Separate Mode\"\n                />\n            </FormGroup>\n            <TitlePanel>\n                <FormLabel focused={false} component=\"legend\">\n                    <TableChartIcon />&nbsp;&nbsp;From Table\n                </FormLabel>\n                <Switch\n                    checked={settings.useTableInput}\n                    onChange={(_, checked) => {\n                        aegis.report('settings.useTableInput');\n                        updateSettings((dragft) => {\n                            dragft.useTableInput = checked;\n                        });\n                    }}\n                    color=\"primary\"\n                />\n            </TitlePanel>\n            <div style={{display: 'flex', alignItems: 'center', marginTop: '10px'}}>\n                <img\n                    style={{width: '100px'}}\n                    src=\"https://vsassetscdn.azure.cn/v/M193_20210922.8/_content/Header/vs-logo.png\"\n                    alt=\"icon\"\n                />\n                <a \n                    style={{marginLeft: '10px',color: '#fff'}}\n                    href=\"https://marketplace.visualstudio.com/items?itemName=wulunyi.vsce-typeof-sjsonc\"\n                >vscode 插件</a>\n            </div>\n        </FormControl>\n    )\n}","export function getClipboardData(\n    e: React.ClipboardEvent<HTMLDivElement>,\n  ): string {\n    return e.clipboardData.getData('text/html');\n}\n\nexport function renderToDiv(innerHtml: string): HTMLDivElement {\n    const div = document.createElement('div');\n    div.innerHTML = innerHtml;\n    return div;\n}\n\nexport function isTable(\n    table: HTMLTableElement | null,\n  ): table is HTMLTableElement {\n    return table !== null;\n}\n\nexport function findInderTable(div: HTMLDivElement): HTMLTableElement | null {\n    return div.querySelector('table');\n}\n\nexport function getInnerText(el: HTMLElement): string {\n    return el.innerText;\n}\n\nexport function getTableTdInnerText(table: HTMLTableElement | HTMLTableSectionElement): string[][] {\n    const trs = table.querySelectorAll('tr');\n\n    return [...trs]\n        .map(tr => [...tr.querySelectorAll('th'), ...tr.querySelectorAll('td')].map(getInnerText))\n        .filter(strArr => strArr.length > 0);\n  }\n  \n  export function getTableThInnerText(table: HTMLTableElement | HTMLTableSectionElement): string[] {\n    return [...table.querySelectorAll('th')].map(getInnerText);\n}\n\nexport function parseTableToResult(table: HTMLTableElement) {\n    const thead = table.querySelector('thead');\n    const tbody = table.querySelector('tbody');\n\n    const body = getTableTdInnerText(tbody || table);\n    let head = getTableThInnerText(thead || table);\n  \n    // 如果没有 head 将 body 第一行作为 head\n    if (body.length > 0 && head.length === 0) {\n      head = body.shift()!;\n    }\n  \n    return {\n      body,\n      head,\n    };\n}\n\nexport function tableToSJsonc(\n    table: string[][], options: {name: number; type: number; comments: number}\n): string {\n    const {name, type, comments} = options;\n\n    let result = '{\\n';\n\n    table.forEach(row => {\n        const typeValue = row[type];\n        const value = Number.isNaN(Number(typeValue)) ? `'${typeValue}'` : typeValue;\n        const typeNameArr = row[name].split(/\\s+/);\n        if (typeNameArr.length === 0) { return }\n        const [firstName, ...restName] = typeNameArr;\n\n        const typeName = typeNameArr.length === 1 ? firstName : `${firstName}${restName.map((item) => {\n            return `${item.slice(0,1).toLocaleUpperCase()}${item.slice(1)}`\n        })}`;\n        \n        result += `\\t\"${typeName}\": ${value}, // ${row[comments]} \\n`;\n    });\n\n    result += '}'\n\n    return result;\n}","import { useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useImmer } from \"use-immer\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ClearIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { \n    findInderTable, renderToDiv, getClipboardData, isTable,\n    parseTableToResult, tableToSJsonc\n} from './helper';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { aegis } from '../../utils/monitor';\n\nconst Box = styled.div`\n    padding: 10px 10px 0 10px;\n    height: 100%;\n    width: 100%;\n    background: #2B2B2B;\n    box-sizing: border-box;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Head = styled.div`\n    height: 50px;\n    flex-shrink: 0;\n`;\n\nconst Body = styled.div`\n    flex: 1;\n    overflow: scroll;\n`;\n\nconst Paste = styled.div`\n    border: 1px dashed grey;\n    box-sizing: border-box;\n    color: #fff;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    opacity: 0.2;\n`;\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n    select: {\n        '&': {\n            minWidth: '120px',\n            maxWidth: '300px'\n        },\n        '& .MuiSelect-root, & .MuiFormLabel-root, & .MuiSvgIcon-root': {\n            color: '#fff',\n            fontSize: '14px'\n        },\n        '& .MuiFormLabel-root.MuiInputLabel-shrink': {\n            transform: 'translate(0, 1.5px) scale(1)'\n        },\n        '& .MuiInput-underline:before': {\n            border: 'none'\n        }\n    },\n    buttonPanel: {\n        '&': {\n            height: '50px'\n        },\n        '& .MuiIconButton-root': {\n            padding: '0'\n        }\n    }\n});\n\ninterface Props {\n    onChange?: (sjonc: string) => void;\n}\n\ninterface Data {\n    table: {\n        head: string[];\n        body: string[][];\n    },\n    settings: {\n        name: number;\n        type: number;\n        comments: number;\n    },\n    showMsg: boolean;\n}\n\nexport function TableEditor (props: Props) {\n    const classes = useStyles();\n    const [data, updateData] = useImmer<Data>({\n        table: {head: [], body: []},\n        settings: {\n            name: 0,\n            type: 1,\n            comments: 2,\n        },\n        showMsg: false\n    });\n\n    const toSJsonc = useCallback(() => {\n        return tableToSJsonc(data.table.body, data.settings)\n    }, [data.table, data.settings]);\n\n    useEffect(() => {\n        props.onChange?.(toSJsonc())\n    }, [toSJsonc]);\n\n    return (\n        <Box>\n            <Head>\n                <Grid container >\n                    <Grid item xs={8}>\n                        {\n                            !!data.table.head.length && (['name', 'type', 'comments'] as Array<keyof Data['settings']>).map((key) => (\n                                <FormControl size=\"small\" key={key} className={classes.select}>\n                                    <InputLabel id=\"demo-simple-select-label\">{key} column</InputLabel>\n                                    <Select\n                                        value={data.settings[key]}\n                                        label=\"name\"\n                                        onChange={(ev) => {\n                                            updateData(draft => {\n                                                draft.settings[key] = ev.target.value as number;\n                                            })\n                                        }}\n                                    >\n                                        {data.table.head.map((name, index) => (\n                                            <MenuItem value={index} key={index}>{name}</MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            ))\n                        }\n                    </Grid>\n                    <Grid \n                        item xs={4} container \n                        justifyContent=\"flex-end\" \n                        alignItems=\"center\"\n                        className={classes.buttonPanel}\n                    >\n                        <Tooltip title=\"Delete Table\">\n                            <IconButton>\n                                <ClearIcon style={{ color: '#fff', cursor: 'pointer' }} onClick={() => {\n                                    updateData(draft => {\n                                        draft.table = {head: [], body: []}\n                                    })\n                                }}/>\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Reset\">\n                            <IconButton>\n                                <RefreshIcon style={{ color: '#fff', cursor: 'pointer' }} onClick={() => {\n                                    props.onChange?.(toSJsonc());\n                                }}/>\n                            </IconButton>\n                        </Tooltip>\n                    </Grid>\n                </Grid>\n            </Head>\n            <Body onPaste={(e) => {\n                const str = getClipboardData(e);\n                const div = renderToDiv(str);\n                const table = findInderTable(div);\n                \n                aegis.report('pasteTable');\n\n                if (isTable(table)) {\n                    const result = parseTableToResult(table);\n\n                    updateData(draft => {\n                        draft.table = result;\n                    });\n                } else {\n                    updateData((draft) => { draft.showMsg = true })\n                }\n            }}>\n                <Snackbar\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                    open={data.showMsg}\n                    autoHideDuration={1500}\n                    onClose={() => updateData((draft) => { draft.showMsg = false })}\n                    message=\"粘贴内容无法解析，请检查粘贴内容是否为表格\"\n                />\n                {\n                    data.table.head.length === 0 &&\n                    data.table.body.length === 0 &&\n                    <Paste>复制表格在此区域粘贴</Paste>\n                }\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                        <TableRow>\n                            {data.table.head.map((item, index) => (\n                                <TableCell key={index}>{item}</TableCell>\n                            ))}\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {data.table.body.map((row, index) => (\n                                <TableRow key={index}>\n                                    {row.map((item, sIndex) => (\n                                        <TableCell key={sIndex}>{item}</TableCell>\n                                    ))}\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Body>\n        </Box>\n    )\n}","export const storage = {\n    set<T>(key: string, value: T) {\n        return localStorage.setItem(key, JSON.stringify(value));\n    },\n    get<T>(key: string): T | null {\n        const v = localStorage.getItem(key);\n\n        try {\n            return v ? JSON.parse(v) : null;\n        } catch (error) {\n            return null;\n        }\n    }\n} ","export const RENDER_SETTINGS_STORAGE_KEY = 'render-settings';","import { useCallback, useEffect, useMemo } from 'react';\nimport { useImmer } from \"use-immer\";\nimport { typeofSjsonc } from 'typeof-sjsonc';\nimport camelcase from 'lodash.camelcase';\nimport trim from 'lodash.trim';\nimport styled from 'styled-components';\nimport { SplitPane }  from 'react-collapse-pane';\nimport { DEMO_SJSONC } from './mock';\nimport { Editor } from './components/Editor';\nimport { GithubLinkIcon } from './components/GithubLinkIcon';\nimport { DEFAULT_SETTINGS, TypeofSettings } from './components/TypeofSettings';\nimport { TableEditor } from './components/TableEditor';\nimport { storage } from './utils/storage';\nimport { RENDER_SETTINGS_STORAGE_KEY } from './constants';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport hotkeys from 'hotkeys-js';\nimport { aegis } from './utils/monitor';\n\nconst FullSizeDiv = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n  min-width: 500px;\n  min-height: 400px;\n`;\n\nconst FlexDiv = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n`;\n\nconst Side = styled.div`\n  width: 258px;\n  background-color: rgb(44, 49, 56);\n  flex-shrink: 0;\n  padding: 10px;\n  box-sizing: border-box;\n  color: #fff;\n  user-select: none;\n`;\n\nconst Hover = styled.div`\n\tposition: fixed;\n\ttop: 50px;\n\tright: 10px;\n\tz-index: 999;\n`;\n\nconst DEFAULT_DATA = {\n\tsjsonc:  DEMO_SJSONC,\n\ttypeofResult: '',\n\tsettings: storage.get<typeof DEFAULT_SETTINGS>(RENDER_SETTINGS_STORAGE_KEY) ?? DEFAULT_SETTINGS\n};\n\nexport function App() {\n\tconst [data, updateData] = useImmer(DEFAULT_DATA);\n\t\n\tconst transformFn = useCallback((sjsonc: string) => {\n\t\tconst { settings } = data;\n\t\ttry {\n\t\t\tconst result = typeofSjsonc(\n\t\t\t\tsjsonc,\n\t\t\t\ttrim(settings.name) === '' ? DEFAULT_SETTINGS.name : camelcase(settings.name),\n\t\t\t\tsettings.options\n\t\t\t);\n\t\t\tupdateData((dragft) => {\n\t\t\t\tdragft.typeofResult = result;\n\t\t\t\tdragft.sjsonc = sjsonc;\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tupdateData((dragft) => {\n\t\t\t\tdragft.typeofResult = (e as Error).message;\n\t\t\t});\n\t\t}\n\t}, [data.settings]);\n\n\tuseEffect(() => {\n\t\ttransformFn(data.sjsonc)\n\t}, [transformFn]);\n\n\tuseEffect(() => {\n        hotkeys('ctrl+c,command+c', (ev) => {\n            aegis.report('event.copy');\n        });\n    }, [])\n\n\tconst renderEditor = useMemo(() => {\n\t\tconst CodeEditor = (\n\t\t\t<FullSizeDiv>\n\t\t\t\t<SplitPane split=\"vertical\">\n\t\t\t\t\t<FullSizeDiv>\n\t\t\t\t\t\t<Editor value={data.sjsonc} onChange={transformFn} />\n\t\t\t\t\t</FullSizeDiv>\n\t\t\t\t\t<FullSizeDiv>\n\t\t\t\t\t\t<Editor value={data.typeofResult} disabled copyable/>\n\t\t\t\t\t</FullSizeDiv>\n\t\t\t\t</SplitPane>\n\t\t\t</FullSizeDiv>\n\t\t)\n\n\t\tif (!data.settings.useTableInput) {\n\t\t\treturn CodeEditor;\n\t\t}\n\n\t\treturn (\n\t\t\t<SplitPane split=\"horizontal\">\n\t\t\t\t<FullSizeDiv>\n\t\t\t\t\t{CodeEditor}\n\t\t\t\t</FullSizeDiv>\n\t\t\t\t\n\t\t\t\t<FullSizeDiv>\n\t\t\t\t\t<TableEditor onChange={transformFn}/>\n\t\t\t\t</FullSizeDiv>\n\t\t\t</SplitPane>\n\t\t)\n\t}, [data.settings.useTableInput, data.sjsonc, data.typeofResult]);\n\n\treturn (\n\t\t<FullSizeDiv>\n\t\t\t<Hover>\n\t\t\t\t<Tooltip title=\"Star And Issues\" placement=\"left\">\n\t\t\t\t\t<IconButton>\n\t\t\t\t\t<\tGithubLinkIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t</Hover>\n\n\t\t\t<FlexDiv>\n\t\t\t\t<Side>\n\t\t\t\t\t<TypeofSettings value={data.settings} onChange={(v) => {\n\t\t\t\t\t\tupdateData((draft) => { draft.settings = v});\n\t\t\t\t\t\tstorage.set(RENDER_SETTINGS_STORAGE_KEY, v);\n\t\t\t\t\t}} />\n\t\t\t\t</Side>\n\n\t\t\t\t<FullSizeDiv>\n\t\t\t\t\t{renderEditor}\n\t\t\t\t</FullSizeDiv>\n\t\t\t</FlexDiv>\n\t\t</FullSizeDiv>\n\t);\n}\n\n","export const DEMO_SJSONC = `{\n    // 属性带双引号\n    \"code\": 0,\n    // 属性带单引号\n    'data': { \n        /** \n         * 多行注释 \n         * 多行注释\n         */\n        list: [{\n            name: 'hello', // 属性不带引号\n            age: 18\n        }, {\n            name: \"world\",\n            age: 16,\n            nickName: 'lucky' // 尾部单行注释\n        }]\n    }\n}`;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { aegis } from './utils/monitor';\nimport './global.css';\n\naegis.reportPv(124941);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}