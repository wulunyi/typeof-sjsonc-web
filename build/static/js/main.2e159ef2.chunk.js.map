{"version":3,"sources":["../../src/parser/helper.ts","../../src/render/types.ts","../../src/parser/index.ts","../../src/render/helper.ts","../../src/render/index.ts","../../src/plugins/separate.ts","utils/monitor.ts","components/Editor.tsx","components/GithubLinkIcon.tsx","components/StyledTextField.tsx","components/StyleCheckbox.tsx","components/TypeofSettings.tsx","components/TableEditor/helper.ts","components/TableEditor/index.tsx","utils/storage.ts","constants.ts","App.tsx","mock.ts","../../src/index.ts","reportWebVitals.ts","index.tsx"],"names":["isAfterLoc","aloc","bloc","isBeforeLoc","isSameLine","isAfter","asloc","bsloc","isAfterNearSameLine","nextSloc","isIn","parentLoc","and","commentLoc","isNoNextSibling","nextSiblingLoc","createFindComments","comments","list","isEmpty","beLongTo","anyPass","allPass","always","not","loc","createBeLongTo","len","result","isObjectPattern","n","propEq","isArrayPattern","isObjectProperty","createUnionAppend","contains","item","createRObject","name","children","kind","markCount","isRObject","createRArray","createRElement","types","isRElement","isRefRNode","parse","Array","ast","sjsoncParser","findComments","nodeSet","resultNode","creator","node","parent","nextSibling","rNodeFactory","id","unionAppend","childName","valudeNode","valueId","nextSiblingChild","index","key","child","transform","propertyNode","type","nameAlias","arr","sureOptions","merge","disallowComments","separate","prefix","camel","$1","printSpace","deep","createPrintComments","values","sortWith","ascend","path","final","cur","v","printNameByPrefix","render","printName","printCommentsAtDeep","hasPattren","renderObjectAtDeep","renderArrayAtDeep","nameGroupMap","group","Object","nodes","typeLen","renderElement","member","createUnionName","names","getName","test","m","Number","suffixName","layerNode","replace","finalNode","options","layer1Len","unionName","queue","clone","isObj","aegis","Aegis","reportApiSpeed","reportAssetSpeed","spa","FullSizeDiv","styled","div","AbsoluteDiv","Editor","props","containerRef","useRef","useImmer","value","editor","undefined","showMsg","data","updateData","useLayoutEffect","current","instance","CodeMirror","mode","theme","readOnly","disabled","lineNumbers","lineWrapping","draft","on","e","newValue","getValue","onChange","useEffect","setValue","CopyAbility","useMemo","copyable","Tooltip","title","placement","text","onCopy","report","IconButton","style","color","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","ref","LinkBox","a","GithubLinkIcon","href","height","viewBox","version","width","aria-hidden","fill","fillRule","d","useStyles","makeStyles","root","marginLeft","marginTop","fontSize","fontWeight","lineHeight","backgroundColor","paddingLeft","paddingRight","borderRadius","boxsizing","overflow","StyledTextField","classes","TextField","className","fullWidth","margin","icon","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","display","content","StyledCheckbox","Checkbox","disableRipple","clsx","inputProps","TitlePanel","alignItems","body","DEFAULT_SETTINGS","useTableInput","TypeofSettings","settings","updateSettings","dragft","hotkeys","FormControl","component","FormLabel","focused","FormGroup","label","placeholder","event","target","FormControlLabel","control","checked","_","Switch","src","alt","getInnerText","el","innerText","parseTableToResult","table","thead","querySelector","trs","querySelectorAll","map","tr","filter","strArr","length","getTableTdInnerText","head","getTableThInnerText","shift","Box","Head","Body","Paste","minWidth","select","maxWidth","border","buttonPanel","padding","TableEditor","toSJsonc","useCallback","forEach","row","isNaN","uperValue","toLocaleUpperCase","Date","now","typeNameArr","split","firstName","restName","typeName","slice","tableToSJsonc","Grid","container","xs","size","InputLabel","Select","ev","MenuItem","justifyContent","cursor","onClick","onPaste","findInderTable","innerHtml","document","createElement","innerHTML","renderToDiv","clipboardData","getData","getClipboardData","isTable","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","sIndex","storage","localStorage","setItem","JSON","stringify","getItem","error","RENDER_SETTINGS_STORAGE_KEY","FlexDiv","Side","Hover","DEFAULT_DATA","sjsonc","typeofResult","App","transformFn","jsonc","typeofSjsonc","trim","camelcase","renderEditor","CodeEditor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reportPv","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e159ef2.chunk.js","sourcesContent":["import {\n    Comment,\n    LineComment,\n    Node,\n    ObjectPattern,\n    ArrayPattern,\n    ObjectProperty,\n    BlockComment,\n    SourceLocation,\n    Location,\n} from 'sjsonc-parser';\nimport {\n    propEq,\n    anyPass,\n    contains,\n    isEmpty,\n    allPass,\n    always,\n    not,\n    and,\n} from 'ramda';\n\nconst isAfterLoc = (aloc: Location, bloc: Location) => {\n    return (\n        aloc.line < bloc.line ||\n        (aloc.line === bloc.line && aloc.column < bloc.column)\n    );\n};\n\nconst isBeforeLoc = (aloc: Location, bloc: Location) => {\n    return (\n        aloc.line > bloc.line ||\n        (aloc.line === bloc.line && aloc.column > bloc.column)\n    );\n};\n\nconst isSameLine = (aloc: Location, bloc: Location) => {\n    return aloc.line === bloc.line;\n};\n\nconst isPre = (asloc: SourceLocation) => (bsloc: SourceLocation) => {\n    return isBeforeLoc(asloc.start, bsloc.end);\n};\n\nconst isAfter = (asloc: SourceLocation) => (bsloc: SourceLocation) => {\n    return isAfterLoc(asloc.end, bsloc.start);\n};\n\nconst isAfterNearSameLine =\n    (asloc: SourceLocation, nextSloc?: SourceLocation) =>\n    (bsloc: SourceLocation) => {\n        return (\n            isSameLine(asloc.end, bsloc.start) &&\n            isSameLine(bsloc.start, bsloc.end) &&\n            isAfterLoc(asloc.end, bsloc.start) &&\n            nextSloc !== undefined &&\n            isBeforeLoc(nextSloc.start, bsloc.end)\n        );\n    };\n\nconst isIn = (parentLoc: SourceLocation) => (commentLoc: SourceLocation) => {\n    return and(\n        isAfterLoc(parentLoc.start, commentLoc.start),\n        isBeforeLoc(parentLoc.end, commentLoc.end)\n    );\n};\n\nconst isNoNextSibling = (nextSiblingLoc?: SourceLocation) =>\n    nextSiblingLoc === undefined;\n\nfunction createBeLongTo(\n    loc: SourceLocation,\n    isPattern: boolean,\n    parentLoc: SourceLocation,\n    nextSiblingLoc?: SourceLocation\n) {\n    return (commentLoc: SourceLocation) => {\n        return anyPass([\n            isPre(loc),\n            allPass([\n                always(not(isPattern)),\n                always(isNoNextSibling(nextSiblingLoc)),\n                isIn(parentLoc),\n            ]),\n            allPass([\n                always(isPattern),\n                always(isNoNextSibling(nextSiblingLoc)),\n                isAfter(parentLoc),\n                isIn(parentLoc),\n            ]),\n            allPass([\n                isIn(parentLoc),\n                isAfterNearSameLine(loc, nextSiblingLoc),\n            ]),\n        ])(commentLoc);\n    };\n}\n\nexport function createFindComments(comments: Comment[]) {\n    const list = comments.slice(0);\n\n    /**\n     * @param loc 传入的是作为值的 loc\n     * @param nextSiblingLoc loc 所在项的下一个兄弟项的 loc\n     */\n    return (\n        loc: SourceLocation,\n        isPattern: boolean,\n        parentLoc: SourceLocation,\n        nextSiblingLoc?: SourceLocation\n    ) => {\n        if (isEmpty(list)) {\n            return [];\n        }\n\n        const beLongTo = createBeLongTo(\n            loc,\n            isPattern,\n            parentLoc,\n            nextSiblingLoc\n        );\n\n        let len = list.length;\n\n        const result: Comment[] = [];\n\n        while (len--) {\n            if (beLongTo(list[len]!.loc)) {\n                result.unshift(...list.splice(len, 1));\n            }\n        }\n\n        return result;\n    };\n}\n\nexport const isObjectPattern = (n: Node): n is ObjectPattern =>\n    propEq('type', 'ObjectPattern', n);\n\nexport const isArrayPattern = (n: Node): n is ArrayPattern =>\n    propEq('type', 'ArrayPattern', n);\n\nexport const isObjectProperty = (n: Node): n is ObjectProperty =>\n    propEq('type', 'ObjectProperty', n);\n\nexport const isBlockComment = (n: Node): n is BlockComment =>\n    propEq('type', 'BlockComment', n);\n\nexport const isLineComment = (n: Node): n is LineComment =>\n    propEq('type', 'LineComment', n);\n\nexport const createUnionAppend =\n    <T>(list: T[]) =>\n    (item: T) => {\n        if (!contains(item, list)) {\n            list.push(item);\n        }\n    };\n","import { Comment } from 'sjsonc-parser';\nimport { propEq, anyPass } from 'ramda';\n\nexport interface RenderOptions {\n    /** 禁止产出注释 */\n    disallowComments: boolean;\n    /** 是否将子结构分割出单独的 interface */\n    separate: boolean;\n    /** 前缀（例如前缀 I => IData ）*/\n    prefix: string;\n}\n\nexport type RNode = RObject | RArray | RElement;\nexport type RefRNode = RObject | RArray;\n\nexport interface RBaseNode {\n    kind: RNode['kind'];\n    comments: Comment[];\n    markCount: number;\n    name: string;\n}\n\nexport interface RObject extends RBaseNode {\n    kind: 'Object';\n    children: RNode[];\n}\n\nexport interface RArray extends RBaseNode {\n    kind: 'Array';\n    children: RNode[];\n}\n\nexport interface RElement extends RBaseNode {\n    kind: 'Element';\n    types: string[];\n}\n\nexport type PartialExcludeKind<T> = Partial<Omit<T, 'kind'>>;\n\nexport type RCreater<T extends RNode> = (\n    name: string,\n    children?: T extends RElement ? string[] : RNode[],\n    comments?: Comment[]\n) => T;\n\nexport const createRObject: RCreater<RObject> = (\n    name = '',\n    children: RNode[] = [],\n    comments: Comment[] = []\n) => {\n    return {\n        kind: 'Object',\n        comments,\n        markCount: 1,\n        name,\n        children,\n    };\n};\n\nexport const isRObject = (n: RNode): n is RObject =>\n    propEq('kind', 'Object', n);\n\nexport const createRArray: RCreater<RArray> = (\n    name = '',\n    children: RNode[] = [],\n    comments: Comment[] = []\n) => {\n    return {\n        kind: 'Array',\n        comments,\n        markCount: 1,\n        name,\n        children,\n    };\n};\n\nexport const isRArray = (n: RNode): n is RArray => propEq('kind', 'Array', n);\n\nexport const createRElement: RCreater<RElement> = (\n    name = '',\n    types: string[] = [],\n    comments: Comment[] = []\n) => {\n    return {\n        kind: 'Element',\n        comments,\n        markCount: 1,\n        name,\n        types,\n    };\n};\n\nexport const isRElement = (n: RNode): n is RElement =>\n    propEq('kind', 'Element', n);\n\nexport const isRefRNode = anyPass([isRArray, isRObject]) as (\n    n: RNode\n) => n is RefRNode;\n","import {\n    createFindComments,\n    isArrayPattern,\n    isObjectPattern,\n    isObjectProperty,\n    createUnionAppend,\n} from './helper';\n\nimport * as sjsoncParser from 'sjsonc-parser';\nimport {\n    Node,\n    Pattern,\n    ObjectProperty,\n    ValueType,\n    Program,\n} from 'sjsonc-parser';\nimport {\n    RefRNode,\n    createRObject,\n    createRArray,\n    RElement,\n    createRElement,\n    RNode,\n    RCreater,\n} from '../render/types';\n\nexport function parse(\n    jsonc: string,\n    name: string | string[] = 'root'\n): RefRNode[] {\n    name = Array.isArray(name) ? name : [name];\n    const ast = sjsoncParser.parse(jsonc);\n    const findComments = createFindComments(ast.comments);\n\n    // 合并结构辅助\n    const nodeSet = new Map<string, RNode>();\n\n    function rNodeFactory<T extends RNode>(\n        node: Node,\n        name: string,\n        id: string,\n        creator: RCreater<T>,\n        parent: Program | Pattern,\n        nextSibling?: Node\n    ): T {\n        let resultNode: T;\n\n        if (nodeSet.has(id)) {\n            resultNode = nodeSet.get(id) as T;\n            resultNode.markCount += 1;\n        } else {\n            resultNode = creator(name);\n            nodeSet.set(id, resultNode);\n        }\n\n        if (isObjectPattern(node) || isArrayPattern(node)) {\n            resultNode.comments.push(\n                ...findComments(node.loc, true, parent.loc, nextSibling?.loc)\n            );\n        } else {\n            resultNode.comments.push(\n                ...findComments(node.loc, false, parent.loc, nextSibling?.loc)\n            );\n        }\n\n        return resultNode;\n    }\n\n    function transform(\n        node: Pattern,\n        name: string,\n        id: string,\n        parent: Program | Pattern,\n        nextSibling?: Node\n    ): RefRNode {\n        const result = isObjectPattern(node)\n            ? rNodeFactory(node, name, id, createRObject, parent, nextSibling)\n            : rNodeFactory(node, name, id, createRArray, parent, nextSibling);\n\n        const unionAppend = createUnionAppend(result.children);\n\n        node.children.forEach(\n            (child: ObjectProperty | ValueType, index: number) => {\n                let childName = name;\n                let valudeNode: Node = child;\n                let valueId = id;\n                const nextSiblingChild = node.children[index + 1];\n\n                if (isObjectProperty(child)) {\n                    const { key, value } = child;\n                    valudeNode = value;\n                    (childName = key.value), (valueId = `${id}_${childName}`);\n                }\n\n                if (isObjectPattern(valudeNode)) {\n                    unionAppend(\n                        transform(\n                            valudeNode,\n                            childName,\n                            valueId + '{}',\n                            node,\n                            nextSiblingChild\n                        )\n                    );\n                } else if (isArrayPattern(valudeNode)) {\n                    unionAppend(\n                        transform(\n                            valudeNode,\n                            childName,\n                            valueId + '[]',\n                            node,\n                            nextSiblingChild\n                        )\n                    );\n                } else {\n                    const propertyNode = rNodeFactory(\n                        valudeNode,\n                        childName,\n                        valueId + '$',\n                        createRElement,\n                        node,\n                        nextSiblingChild\n                    ) as RElement;\n\n                    const type = typeof valudeNode.value;\n\n                    createUnionAppend(propertyNode.types)(\n                        valudeNode.value === null ? 'null' : type\n                    );\n\n                    unionAppend(propertyNode);\n                }\n            }\n        );\n\n        return result;\n    }\n\n    return ast.body.map((item, index, arr) => {\n        const nameAlias = name[index] || name[0] + index;\n\n        return transform(item, nameAlias, nameAlias, ast, arr[index + 1]);\n    });\n}\n","import { isBlockComment } from '../parser/helper';\nimport { sortWith, ascend, path, merge } from 'ramda';\nimport { Comment } from 'sjsonc-parser';\nimport { RenderOptions } from './types';\n\nconst DEFAULT_OPTIONS: RenderOptions = {\n    disallowComments: false,\n    separate: false,\n    prefix: '',\n};\n\nexport const sureOptions = merge(DEFAULT_OPTIONS) as (\n    options?: Partial<RenderOptions>\n) => RenderOptions;\n\nexport function camel(name: string) {\n    return (\n        name.substr(0, 1).toLocaleUpperCase() +\n        name.slice(1).replace(/-(\\w)/g, ($0, $1) => {\n            return $1.toUpperCase();\n        })\n    );\n}\n\nexport function printSpace(deep: number) {\n    let result = '';\n\n    while (deep--) {\n        result += '\\t';\n    }\n\n    return result;\n}\n\nexport const createPrintComments =\n    (disallowComments: boolean) => (comments: Comment[], deep: number) => {\n        if (disallowComments) {\n            return '';\n        }\n\n        comments = sortWith(\n            [\n                ascend(path(['loc', 'start', 'line'])),\n                ascend(path(['loc', 'start', 'column'])),\n            ],\n            comments\n        );\n\n        const values = comments.reduce((final, cur) => {\n            if (isBlockComment(cur)) {\n                final.push(...cur.value);\n            } else {\n                final.push(cur.value);\n            }\n\n            return final;\n        }, [] as string[]);\n\n        if (values.length === 0) {\n            return '';\n        }\n\n        if (values.length === 1) {\n            return `${printSpace(deep)}/** ${values[0]} */\\n`;\n        }\n\n        let result = `${printSpace(deep)}/**\\n`;\n\n        values.forEach(v => {\n            result += `${printSpace(deep)} * ${v}\\n`;\n        });\n\n        result += `${printSpace(deep)} */\\n`;\n        return result;\n    };\n\nexport const printNameByPrefix = (prefix: string) => (name: string) =>\n    camel(prefix) + camel(name);\n","import {\n    RefRNode,\n    RObject,\n    isRObject,\n    RArray,\n    RElement,\n    RNode,\n    isRElement,\n    RenderOptions,\n} from './types';\nimport { Comment } from 'sjsonc-parser';\nimport {\n    printSpace,\n    createPrintComments,\n    sureOptions,\n    printNameByPrefix,\n} from './helper';\n\nexport function render(\n    nodes: RefRNode[],\n    options?: Partial<RenderOptions>\n): string {\n    const { disallowComments, prefix } = sureOptions(options);\n    const printName = printNameByPrefix(prefix);\n    const printCommentsAtDeep = createPrintComments(disallowComments);\n\n    function renderArrayAtDeep(node: RArray, deep: number): string {\n        let hasPattren = false;\n\n        const types = node.children.reduce((final, child) => {\n            if (isRElement(child)) {\n                final.push(...child.types);\n            } else {\n                hasPattren = true;\n\n                if (isRObject(child)) {\n                    final.push(renderObjectAtDeep(child, deep));\n                } else {\n                    final.push(renderArrayAtDeep(child, deep));\n                }\n            }\n\n            return final;\n        }, [] as string[]);\n\n        if (types.length === 0) {\n            return 'any[]';\n        }\n\n        if (types.length === 1) {\n            return hasPattren ? `Array<${types[0]}>` : `${types[0]}[]`;\n        }\n\n        return `Array<${types.join('|')}>`;\n    }\n\n    function renderElement(node: RElement): string {\n        const typeLen = node.types.length;\n        const values = [...node.types];\n\n        if (typeLen === 0) {\n            return 'any';\n        } else if (typeLen === 1) {\n            return values[0];\n        } else {\n            return values.join('|');\n        }\n    }\n\n    function renderObjectAtDeep(node: RObject, deep: number): string {\n        // 根据名字分组\n        // 在数组项中可能一个名字对应不同类型\n        // 数组合并的时候会将对象进行合并 [{a: 1}, {a: true}]\n        const nameGroupMap: Record<string, RNode[]> = {};\n\n        node.children.forEach(child => {\n            const group = nameGroupMap[child.name];\n\n            if (group) {\n                group.push(child);\n            } else {\n                nameGroupMap[child.name] = [child];\n            }\n        });\n\n        let result = '{\\n';\n\n        Object.entries(nameGroupMap).forEach(([name, nodes]) => {\n            let markCount = 0;\n            const comments: Comment[] = [];\n\n            const types = nodes.map(item => {\n                markCount += item.markCount;\n                comments.push(...item.comments);\n\n                if (isRElement(item)) {\n                    return renderElement(item);\n                }\n\n                if (isRObject(item)) {\n                    return renderObjectAtDeep(item, deep + 1);\n                }\n\n                return renderArrayAtDeep(item, deep + 1);\n            });\n\n            let type = 'any';\n\n            if (types.length === 1) {\n                type = types[0];\n            } else if (types.length > 1) {\n                type = types.join('|');\n            }\n\n            const member =\n                node.markCount > markCount\n                    ? `${name}?: ${type}`\n                    : `${name}: ${type}`;\n\n            if (comments.length > 0) {\n                result += printCommentsAtDeep(comments, deep + 1);\n            }\n\n            result += `${printSpace(deep + 1)}${member};\\n`;\n        });\n\n        result += `${printSpace(deep)}}`;\n\n        return result;\n    }\n\n    return nodes\n        .map((item: RArray | RObject) => {\n            if (isRObject(item)) {\n                return `${printCommentsAtDeep(\n                    item.comments,\n                    0\n                )}export interface ${printName(item.name)} ${renderObjectAtDeep(\n                    item,\n                    0\n                )}`;\n            }\n\n            return `${printCommentsAtDeep(\n                item.comments,\n                0\n            )}export type ${printName(item.name)} = ${renderArrayAtDeep(\n                item,\n                0\n            )}`;\n        })\n        .join('\\n\\n');\n}\n","/**\n * @description 将 AST 中对象结构拆分到顶层\n */\nimport {\n    RefRNode,\n    RNode,\n    isRObject,\n    createRElement,\n    isRefRNode,\n} from '../render/types';\nimport { printNameByPrefix } from '../render/helper';\nimport { merge, clone } from 'ramda';\n\nexport function suffixName(name: string) {\n    if (/\\d+$/.test(name)) {\n        return name.replace(/\\d+$/, m => {\n            return `${Number.parseInt(m, 10) + 1}`;\n        });\n    }\n\n    return name + 1;\n}\n\nexport function createUnionName() {\n    const names = new Set<string>();\n\n    function getName(name: string): string {\n        if (names.has(name)) {\n            return getName(suffixName(name));\n        } else {\n            names.add(name);\n        }\n\n        return name;\n    }\n\n    return getName;\n}\n\nexport function layerNode(node: RNode, index: number, parent: RNode[]) {\n    return {\n        node,\n        replace(finalNode: RNode) {\n            // 替换后还是保留标记计数\n            finalNode.markCount = node.markCount;\n            parent.splice(index, 1, finalNode);\n        },\n    };\n}\n\ntype NodePath = ReturnType<typeof layerNode>;\n\nexport function separate(\n    ast: RefRNode[],\n    options: { prefix?: string } = {}\n): RefRNode[] {\n    const printName = printNameByPrefix(options.prefix ?? '');\n    const result: RefRNode[] = [];\n    const layer1Len = ast.length;\n    const unionName = createUnionName();\n\n    const queue: NodePath[] = clone(ast).map(layerNode);\n\n    while (queue.length) {\n        const { node, replace } = queue.shift()!;\n\n        if (isRefRNode(node)) {\n            const isObj = isRObject(node);\n\n            // ast.length > result.length 表示顶层\n            if (layer1Len > result.length || isObj) {\n                const name = unionName(node.name);\n\n                result.push(merge(node, { name }));\n\n                if (isObj) {\n                    replace(createRElement(node.name, [printName(name)]));\n                }\n            }\n\n            queue.push(...node.children.map(layerNode));\n        }\n    }\n\n    return result;\n}\n","import Aegis from 'aegis-web-sdk';\n\nexport const aegis = new Aegis({\n    id: 'kXD2YxMe7J2oAzeWb1', // 上报 id\n    // uin: 'xxx', // 用户唯一 ID（可选）\n    reportApiSpeed: true, // 接口测速\n    reportAssetSpeed: true, // 静态资源测速\n    spa: true // spa 应用页面跳转的时候开启 pv 计算\n});","import CodeMirror from 'codemirror';\nimport { useEffect, useLayoutEffect, useRef, useMemo } from 'react';\nimport { useImmer } from \"use-immer\";\nimport styled from 'styled-components';\nimport CopyIcon from '@material-ui/icons/FileCopy';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport 'codemirror/theme/darcula.css';\nimport 'codemirror/lib/codemirror.css';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { aegis } from '../utils/monitor';\n\nconst FullSizeDiv = styled.div`\n    position: relative;\n    height: 100%;\n    width: 100%;\n`;\n\nconst AbsoluteDiv = styled.div`\n  right: 10px;\n  top: 10px;\n  position: absolute;\n  z-index: 10;\n  cursor: pointer;\n  user-select: none;\n`;\n\ninterface Props {\n    value?: string;\n    onChange?: (v: string) => void;\n    disabled?: boolean;\n    copyable?: boolean;\n}\n\ninterface Data {\n    value: string;\n    editor: CodeMirror.Editor | undefined;\n    showMsg: boolean;\n}\n\nexport function Editor(props: Props) {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [data, updateData] = useImmer<Data>({\n        value: props.value ?? '',\n        editor: undefined,\n        showMsg: false,\n    });\n    \n    useLayoutEffect(() => {\n        if (containerRef.current) {\n            const instance = CodeMirror(containerRef.current, {\n                value: props.value ?? \"\",\n                mode: 'default',\n                theme: \"darcula\",\n                readOnly: props.disabled ?? false,\n                lineNumbers: true,\n                lineWrapping: true,\n            })\n\n            updateData((draft) => {draft.editor = instance});\n\n            instance.on(\"change\", (e) => {\n                const newValue = e.getValue();\n                updateData((draft) => {draft.value = newValue});\n                props.onChange?.(newValue);\n            })\n        }\n    }, []);\n    useEffect(() => {\n        const {editor, value} = data;\n\n        if (editor && props.value !== value && typeof props.value ==='string') {\n            editor.setValue(props.value)\n        }\n    }, [props.value])\n\n    const CopyAbility = useMemo(() => {\n        if (!props.copyable) return null;\n\n        return (\n            <>\n                <AbsoluteDiv>\n                    <Tooltip title=\"Copy\" placement=\"left\">\n                        <CopyToClipboard\n                            text={data.value}\n                            onCopy={() => { \n                                aegis.report('copy');\n                                updateData((draft) => { draft.showMsg = true });\n                            }}\n                        >\n                                <IconButton>\n                                    <CopyIcon style={{ color: '#fff' }} />\n                                </IconButton>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </AbsoluteDiv>\n\n                <Snackbar\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                    open={data.showMsg}\n                    autoHideDuration={1500}\n                    onClose={() => updateData((draft) => { draft.showMsg = false })}\n                    message=\"复制成功\"\n                />\n            </>\n        )\n    }, [data.showMsg, props.copyable])\n\n    return (\n        <FullSizeDiv>\n            <FullSizeDiv ref={containerRef}></FullSizeDiv>\n\n            {CopyAbility}\n        </FullSizeDiv>\n    ) \n}","import styled from 'styled-components';\n\nconst LinkBox = styled.a`\n    display: inline-block;\n    user-select: none;\n    cursor: pointer;\n`;\n\nexport function GithubLinkIcon() {\n    return (\n        <LinkBox href=\"https://github.com/wulunyi/typeof-sjsonc-web\">\n            <svg \n                height=\"24\" \n                viewBox=\"0 0 16 16\" \n                version=\"1.1\" width=\"24\" \n                aria-hidden=\"true\"\n                fill=\"rgb(102, 178, 255)\"\n            >\n                <path \n                    fillRule=\"evenodd\" \n                    d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n                >\n                </path>\n            </svg>\n        </LinkBox>\n    )\n}","import { makeStyles } from '@material-ui/core/styles';\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles({\n  root: {\n    '&': {\n        marginLeft: '-2px',\n        marginTop: '10px',\n    },\n    '& .MuiFormLabel-root': {\n        color: '#fff',\n        fontSize: '1rem',\n        transform: 'translate(0, -10px) scale(1)',\n        fontWeight: '400',\n        lineHeight: '1.5'\n    },\n    '& .MuiInputBase-root': {\n        backgroundColor: '#fff',\n        paddingLeft: '6px',\n        paddingRight: '6px',\n        borderRadius: '4px',\n        boxsizing: 'border-box',\n        overflow: 'hidden',\n    },\n    '& .MuiInputBase-input': {\n        height: '1.3em'\n    }\n  },\n});\n\nexport function StyledTextField(props: TextFieldProps) {\n  const classes = useStyles();\n\n  return (\n    <TextField\n        className={classes.root}\n        fullWidth\n        margin=\"dense\"\n        {...props}\n    />\n  );\n}\n\n","import clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles({\n  root: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n  icon: {\n    borderRadius: 3,\n    width: 16,\n    height: 16,\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage:\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3',\n    },\n  },\n});\n\n// Inspired by blueprintjs\nexport function StyledCheckbox(props: CheckboxProps) {\n  const classes = useStyles();\n\n  return (\n    <Checkbox\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n      icon={<span className={classes.icon} />}\n      inputProps={{ 'aria-label': 'decorative checkbox' }}\n      {...props}\n    />\n  );\n}\n\n","import FormLabel from '@material-ui/core/FormLabel';\nimport { useEffect } from 'react';\nimport { useImmer } from \"use-immer\";\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { StyledTextField } from './StyledTextField';\nimport { StyledCheckbox } from './StyleCheckbox';\nimport Switch from '@material-ui/core/Switch';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport styled from 'styled-components';\nimport hotkeys from 'hotkeys-js';\nimport { aegis } from '../utils/monitor';\n\nconst TitlePanel = styled.div`\n    display: flex; \n    align-items: center; \n    justify-content: space-between;\n    margin: 10px 0;\n`;\n\nconst useStyles = makeStyles({\n    root: {\n        '& .MuiFormLabel-root': {\n            color: '#fff',\n            display: 'flex',\n            alignItems: 'center',\n        },\n    },\n    body: {\n        paddingLeft: '12px'\n    }\n});\n\nexport const DEFAULT_NAME = 'root';\nexport const DEFAULT_SETTINGS = {\n    name: DEFAULT_NAME,\n    useTableInput: false,\n    options: {\n      disallowComments: false,\n      separate: true,\n      prefix: ''\n    }\n};\n\nexport type SettingsValue = typeof DEFAULT_SETTINGS;\n\nexport interface SettingsProps {\n    value?: SettingsValue;\n    onChange?: (v: SettingsValue) => void;\n}\n\nexport function TypeofSettings(props: SettingsProps) {\n    const classes = useStyles();\n    const [settings, updateSettings] = useImmer<SettingsValue>(props.value ?? DEFAULT_SETTINGS);\n\n    useEffect(() => {\n        if (props.value !== settings) {\n            updateSettings((dragft) => {dragft = props.value ?? DEFAULT_SETTINGS});\n        }\n    }, [props.value]);\n\n    useEffect(() => {\n        props.onChange?.(settings)\n    }, [settings])\n\n    useEffect(() => {\n        hotkeys('ctrl+`', () => {\n            updateSettings(draft => { draft.useTableInput = !draft.useTableInput })\n        })\n    }, [])\n\n    return (\n        <FormControl component=\"fieldset\" fullWidth className={classes.root}>\n            <TitlePanel>\n                <FormLabel focused={false} component=\"legend\">\n                    <SettingsIcon />&nbsp;&nbsp;Render Settings\n                </FormLabel>\n            </TitlePanel>\n            <FormGroup className={classes.body}>\n                <StyledTextField\n                    label=\"Interface Name\"\n                    value={settings.name}\n                    placeholder={'root'}\n                    onChange={(event) => {\n                        aegis.report('settings.name');\n                        updateSettings((dragft) => { dragft.name = event.target.value });\n                    }}\n                />\n\n                <StyledTextField\n                    label=\"Prefix\"\n                    value={settings.options.prefix}\n                    placeholder={'前缀'}\n                    onChange={(event) => {\n                        aegis.report('settings.prefix');\n                        updateSettings((dragft) => { dragft.options.prefix = event.target.value });\n                    }}\n                />\n\n                <FormControlLabel\n                    control={<StyledCheckbox\n                        name=\"disallowComments\"\n                        checked={settings.options.disallowComments}\n                        onChange={(_, checked) => {\n                            aegis.report('settings.disallowComments');\n                            updateSettings((dragft) => {\n                                dragft.options.disallowComments = checked;\n                            })\n                        }}\n                    />}\n                    label=\"Disable Comments\"\n                />\n\n                <FormControlLabel\n                    control={<StyledCheckbox\n                        name=\"separate\"\n                        checked={settings.options.separate}\n                        onChange={(_, checked) => {\n                            aegis.report('settings.separate');\n                            updateSettings((dragft) => {\n                                dragft.options.separate = checked;\n                            })\n                        }}\n                    />}\n                    label=\"Separate Mode\"\n                />\n            </FormGroup>\n            <TitlePanel>\n                <FormLabel focused={false} component=\"legend\">\n                    <TableChartIcon />&nbsp;&nbsp;From Table\n                </FormLabel>\n                <Switch\n                    checked={settings.useTableInput}\n                    onChange={(_, checked) => {\n                        aegis.report('settings.useTableInput');\n                        updateSettings((dragft) => {\n                            dragft.useTableInput = checked;\n                        });\n                    }}\n                    color=\"primary\"\n                />\n            </TitlePanel>\n            <div style={{display: 'flex', alignItems: 'center', marginTop: '10px'}}>\n                <img\n                    style={{width: '100px'}}\n                    src=\"https://vsassetscdn.azure.cn/v/M193_20210922.8/_content/Header/vs-logo.png\"\n                    alt=\"icon\"\n                />\n                <a \n                    style={{marginLeft: '10px',color: '#fff'}}\n                    href=\"https://marketplace.visualstudio.com/items?itemName=wulunyi.vsce-typeof-sjsonc\"\n                >vscode 插件</a>\n            </div>\n        </FormControl>\n    )\n}","export function getClipboardData(\n    e: React.ClipboardEvent<HTMLDivElement>,\n  ): string {\n    return e.clipboardData.getData('text/html');\n}\n\nexport function renderToDiv(innerHtml: string): HTMLDivElement {\n    const div = document.createElement('div');\n    div.innerHTML = innerHtml;\n    return div;\n}\n\nexport function isTable(\n    table: HTMLTableElement | null,\n  ): table is HTMLTableElement {\n    return table !== null;\n}\n\nexport function findInderTable(div: HTMLDivElement): HTMLTableElement | null {\n    return div.querySelector('table');\n}\n\nexport function getInnerText(el: HTMLElement): string {\n    return el.innerText;\n}\n\nexport function getTableTdInnerText(table: HTMLTableElement | HTMLTableSectionElement): string[][] {\n    const trs = table.querySelectorAll('tr');\n\n    return [...trs]\n        .map(tr => [...tr.querySelectorAll('th'), ...tr.querySelectorAll('td')].map(getInnerText))\n        .filter(strArr => strArr.length > 0);\n  }\n  \n  export function getTableThInnerText(table: HTMLTableElement | HTMLTableSectionElement): string[] {\n    return [...table.querySelectorAll('th')].map(getInnerText);\n}\n\nexport function parseTableToResult(table: HTMLTableElement) {\n    const thead = table.querySelector('thead');\n    const tbody = table.querySelector('tbody');\n\n    const body = getTableTdInnerText(tbody || table);\n    let head = getTableThInnerText(thead || table);\n  \n    // 如果没有 head 将 body 第一行作为 head\n    if (body.length > 0 && head.length === 0) {\n      head = body.shift()!;\n    }\n  \n    return {\n      body,\n      head,\n    };\n}\n\nexport function tableToSJsonc(\n    table: string[][], options: {name: number; type: number; comments: number}\n): string {\n    const {name, type, comments} = options;\n\n    let result = '{\\n';\n\n    table.forEach(row => {\n        let value: string | number | boolean =  row[type];\n\n        if(Number.isNaN(Number(value))) {\n            const uperValue = value.toLocaleUpperCase();\n            value = `\"${value}\"`;\n\n            switch(uperValue) {\n                case 'DATE':\n                case 'TIMESTAMP':\n                    value = Date.now();\n                    break;\n                case 'LONG':\n                case 'INT':\n                case 'BIGINT':\n                case 'TINYINT':\n                    value = 0;\n                    break;\n                case 'VARCHAR':\n                case 'STRING':\n                case 'TEXT':\n                case 'CHAR':\n                case 'STR':\n                    value = '\"mock text\"';\n                    break;\n                case 'BOOLEAN':\n                case 'BOOL':\n                    value = true;\n                    break;\n            }\n        }\n\n        const typeNameArr = row[name].split(/\\s+/);\n        if (typeNameArr.length === 0) { return }\n        const [firstName, ...restName] = typeNameArr;\n\n        const typeName = typeNameArr.length === 1 ? firstName : `${firstName}${restName.map((item) => {\n            return `${item.slice(0,1).toLocaleUpperCase()}${item.slice(1)}`\n        })}`;\n        \n        result += `\\t\"${typeName}\": ${value}, // ${row[comments]} \\n`;\n    });\n\n    result += '}'\n\n    return result;\n}","import { useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useImmer } from \"use-immer\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ClearIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { \n    findInderTable, renderToDiv, getClipboardData, isTable,\n    parseTableToResult, tableToSJsonc\n} from './helper';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { aegis } from '../../utils/monitor';\n\nconst Box = styled.div`\n    padding: 10px 10px 0 10px;\n    height: 100%;\n    width: 100%;\n    background: #2B2B2B;\n    box-sizing: border-box;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Head = styled.div`\n    height: 50px;\n    flex-shrink: 0;\n`;\n\nconst Body = styled.div`\n    flex: 1;\n    overflow: scroll;\n`;\n\nconst Paste = styled.div`\n    border: 1px dashed grey;\n    box-sizing: border-box;\n    color: #fff;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    opacity: 0.2;\n`;\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n    select: {\n        '&': {\n            minWidth: '120px',\n            maxWidth: '300px'\n        },\n        '& .MuiSelect-root, & .MuiFormLabel-root, & .MuiSvgIcon-root': {\n            color: '#fff',\n            fontSize: '14px'\n        },\n        '& .MuiFormLabel-root.MuiInputLabel-shrink': {\n            transform: 'translate(0, 1.5px) scale(1)'\n        },\n        '& .MuiInput-underline:before': {\n            border: 'none'\n        }\n    },\n    buttonPanel: {\n        '&': {\n            height: '50px'\n        },\n        '& .MuiIconButton-root': {\n            padding: '0'\n        }\n    }\n});\n\ninterface Props {\n    onChange?: (sjonc: string) => void;\n}\n\ninterface Data {\n    table: {\n        head: string[];\n        body: string[][];\n    },\n    settings: {\n        name: number;\n        type: number;\n        comments: number;\n    },\n    showMsg: boolean;\n}\n\nexport function TableEditor (props: Props) {\n    const classes = useStyles();\n    const [data, updateData] = useImmer<Data>({\n        table: {head: [], body: []},\n        settings: {\n            name: 0,\n            type: 1,\n            comments: 2,\n        },\n        showMsg: false\n    });\n\n    const toSJsonc = useCallback(() => {\n        return tableToSJsonc(data.table.body, data.settings)\n    }, [data.table, data.settings]);\n\n    useEffect(() => {\n        props.onChange?.(toSJsonc())\n    }, [toSJsonc]);\n\n    return (\n        <Box>\n            <Head>\n                <Grid container >\n                    <Grid item xs={8}>\n                        {\n                            !!data.table.head.length && (['name', 'type', 'comments'] as Array<keyof Data['settings']>).map((key) => (\n                                <FormControl size=\"small\" key={key} className={classes.select}>\n                                    <InputLabel id=\"demo-simple-select-label\">{key} column</InputLabel>\n                                    <Select\n                                        value={data.settings[key]}\n                                        label=\"name\"\n                                        onChange={(ev) => {\n                                            updateData(draft => {\n                                                draft.settings[key] = ev.target.value as number;\n                                            })\n                                        }}\n                                    >\n                                        {data.table.head.map((name, index) => (\n                                            <MenuItem value={index} key={index}>{name}</MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            ))\n                        }\n                    </Grid>\n                    <Grid \n                        item xs={4} container \n                        justifyContent=\"flex-end\" \n                        alignItems=\"center\"\n                        className={classes.buttonPanel}\n                    >\n                        <Tooltip title=\"Delete Table\">\n                            <IconButton>\n                                <ClearIcon style={{ color: '#fff', cursor: 'pointer' }} onClick={() => {\n                                    updateData(draft => {\n                                        draft.table = {head: [], body: []}\n                                    })\n                                }}/>\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Reset\">\n                            <IconButton>\n                                <RefreshIcon style={{ color: '#fff', cursor: 'pointer' }} onClick={() => {\n                                    props.onChange?.(toSJsonc());\n                                }}/>\n                            </IconButton>\n                        </Tooltip>\n                    </Grid>\n                </Grid>\n            </Head>\n            <Body onPaste={(e) => {\n                const str = getClipboardData(e);\n                const div = renderToDiv(str);\n                const table = findInderTable(div);\n                \n                aegis.report('pasteTable');\n\n                if (isTable(table)) {\n                    const result = parseTableToResult(table);\n\n                    updateData(draft => {\n                        draft.table = result;\n                    });\n                } else {\n                    updateData((draft) => { draft.showMsg = true })\n                }\n            }}>\n                <Snackbar\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                    open={data.showMsg}\n                    autoHideDuration={1500}\n                    onClose={() => updateData((draft) => { draft.showMsg = false })}\n                    message=\"粘贴内容无法解析，请检查粘贴内容是否为表格\"\n                />\n                {\n                    data.table.head.length === 0 &&\n                    data.table.body.length === 0 &&\n                    <Paste>复制表格在此区域粘贴</Paste>\n                }\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                        <TableRow>\n                            {data.table.head.map((item, index) => (\n                                <TableCell key={index}>{item}</TableCell>\n                            ))}\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {data.table.body.map((row, index) => (\n                                <TableRow key={index}>\n                                    {row.map((item, sIndex) => (\n                                        <TableCell key={sIndex}>{item}</TableCell>\n                                    ))}\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Body>\n        </Box>\n    )\n}","export const storage = {\n    set<T>(key: string, value: T) {\n        return localStorage.setItem(key, JSON.stringify(value));\n    },\n    get<T>(key: string): T | null {\n        const v = localStorage.getItem(key);\n\n        try {\n            return v ? JSON.parse(v) : null;\n        } catch (error) {\n            return null;\n        }\n    }\n} ","export const RENDER_SETTINGS_STORAGE_KEY = 'render-settings';","import { useCallback, useEffect, useMemo } from 'react';\nimport { useImmer } from \"use-immer\";\nimport { typeofSjsonc } from 'typeof-sjsonc';\nimport camelcase from 'lodash.camelcase';\nimport trim from 'lodash.trim';\nimport styled from 'styled-components';\nimport { SplitPane }  from 'react-collapse-pane';\nimport { DEMO_SJSONC } from './mock';\nimport { Editor } from './components/Editor';\nimport { GithubLinkIcon } from './components/GithubLinkIcon';\nimport { DEFAULT_SETTINGS, TypeofSettings } from './components/TypeofSettings';\nimport { TableEditor } from './components/TableEditor';\nimport { storage } from './utils/storage';\nimport { RENDER_SETTINGS_STORAGE_KEY } from './constants';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport hotkeys from 'hotkeys-js';\nimport { aegis } from './utils/monitor';\n\nconst FullSizeDiv = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n  min-width: 500px;\n  min-height: 400px;\n`;\n\nconst FlexDiv = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n`;\n\nconst Side = styled.div`\n  width: 258px;\n  background-color: rgb(44, 49, 56);\n  flex-shrink: 0;\n  padding: 10px;\n  box-sizing: border-box;\n  color: #fff;\n  user-select: none;\n`;\n\nconst Hover = styled.div`\n\tposition: fixed;\n\ttop: 50px;\n\tright: 10px;\n\tz-index: 999;\n`;\n\nconst DEFAULT_DATA = {\n\tsjsonc:  DEMO_SJSONC,\n\ttypeofResult: '',\n\tsettings: storage.get<typeof DEFAULT_SETTINGS>(RENDER_SETTINGS_STORAGE_KEY) ?? DEFAULT_SETTINGS\n};\n\nexport function App() {\n\tconst [data, updateData] = useImmer(DEFAULT_DATA);\n\t\n\tconst transformFn = useCallback((sjsonc: string) => {\n\t\tconst { settings } = data;\n\t\ttry {\n\t\t\tupdateData((dragft) => {\n\t\t\t\tdragft.sjsonc = sjsonc;\n\t\t\t});\n\t\t\tconst result = typeofSjsonc(\n\t\t\t\tsjsonc,\n\t\t\t\ttrim(settings.name) === '' ? DEFAULT_SETTINGS.name : camelcase(settings.name),\n\t\t\t\tsettings.options\n\t\t\t);\n\t\t\tupdateData((dragft) => {\n\t\t\t\tdragft.typeofResult = result;\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tupdateData((dragft) => {\n\t\t\t\tdragft.typeofResult = (e as Error).message;\n\t\t\t});\n\t\t}\n\t}, [data.settings]);\n\n\tuseEffect(() => {\n\t\ttransformFn(data.sjsonc)\n\t}, [transformFn]);\n\n\tuseEffect(() => {\n        hotkeys('ctrl+c,command+c', (ev) => {\n            aegis.report('event.copy');\n        });\n    }, [])\n\n\tconst renderEditor = useMemo(() => {\n\t\tconst CodeEditor = (\n\t\t\t<FullSizeDiv>\n\t\t\t\t<SplitPane split=\"vertical\">\n\t\t\t\t\t<FullSizeDiv>\n\t\t\t\t\t\t<Editor value={data.sjsonc} onChange={transformFn} />\n\t\t\t\t\t</FullSizeDiv>\n\t\t\t\t\t<FullSizeDiv>\n\t\t\t\t\t\t<Editor value={data.typeofResult} disabled copyable/>\n\t\t\t\t\t</FullSizeDiv>\n\t\t\t\t</SplitPane>\n\t\t\t</FullSizeDiv>\n\t\t)\n\n\t\tif (!data.settings.useTableInput) {\n\t\t\treturn CodeEditor;\n\t\t}\n\n\t\treturn (\n\t\t\t<SplitPane split=\"horizontal\">\n\t\t\t\t<FullSizeDiv>\n\t\t\t\t\t{CodeEditor}\n\t\t\t\t</FullSizeDiv>\n\t\t\t\t\n\t\t\t\t<FullSizeDiv>\n\t\t\t\t\t<TableEditor onChange={transformFn}/>\n\t\t\t\t</FullSizeDiv>\n\t\t\t</SplitPane>\n\t\t)\n\t}, [data.settings.useTableInput, data.sjsonc, data.typeofResult]);\n\n\treturn (\n\t\t<FullSizeDiv>\n\t\t\t<Hover>\n\t\t\t\t<Tooltip title=\"Star And Issues\" placement=\"left\">\n\t\t\t\t\t<IconButton>\n\t\t\t\t\t<\tGithubLinkIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t</Hover>\n\n\t\t\t<FlexDiv>\n\t\t\t\t<Side>\n\t\t\t\t\t<TypeofSettings value={data.settings} onChange={(v) => {\n\t\t\t\t\t\tupdateData((draft) => { draft.settings = v});\n\t\t\t\t\t\tstorage.set(RENDER_SETTINGS_STORAGE_KEY, v);\n\t\t\t\t\t}} />\n\t\t\t\t</Side>\n\n\t\t\t\t<FullSizeDiv>\n\t\t\t\t\t{renderEditor}\n\t\t\t\t</FullSizeDiv>\n\t\t\t</FlexDiv>\n\t\t</FullSizeDiv>\n\t);\n}\n\n","export const DEMO_SJSONC = `{\n    // 属性带双引号\n    \"code\": 0,\n    // 属性带单引号\n    'data': { \n        /** \n         * 多行注释 \n         * 多行注释\n         */\n        list: [{\n            name: 'hello', // 属性不带引号\n            age: 18\n        }, {\n            name: \"world\",\n            age: 16,\n            nickName: 'lucky' // 尾部单行注释\n        }]\n    }\n}`;","import { parse } from './parser';\nimport { render } from './render';\nimport { separate } from './plugins/separate';\nimport { RenderOptions } from './render/types';\n\nexport function typeofSjsonc(\n    jsonc: string,\n    name = 'root',\n    options?: Partial<RenderOptions>\n) {\n    const ast = parse(jsonc, name);\n\n    return render(options?.separate ? separate(ast, options) : ast, options);\n}\n\nexport { parse, render };\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { aegis } from './utils/monitor';\nimport './global.css';\n\naegis.reportPv(124941);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}